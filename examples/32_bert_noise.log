(myenv) [BMHRjngg@npl41 examples]$ python 32_noisy_bert.py --noise 0.1 --checkpoint ./saved_chkpt_noise_analysis.pth --load
/gpfs/u/home/BMHR/BMHRjngg/barn-shared/miniconda3/envs/myenv/lib/python3.11/site-packages/transformers/utils/hub.py:124: FutureWarning: Using `TRANSFORMERS_CACHE` is deprecated and will be removed in v5 of Transformers. Use `HF_HOME` instead.
  warnings.warn(
Some weights of the model checkpoint at csarron/bert-base-uncased-squad-v1 were not used when initializing BertForQuestionAnswering: ['bert.pooler.dense.bias', 'bert.pooler.dense.weight']
- This IS expected if you are initializing BertForQuestionAnswering from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertForQuestionAnswering from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
AnalogWrapperBertForQuestionAnswering(
  (bert): BertModel(
    (embeddings): BertEmbeddings(
      (word_embeddings): Embedding(30522, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): BertEncoder(
      (layer): ModuleList(
        (0-11): 12 x BertLayer(
          (attention): BertAttention(
            (self): BertSdpaSelfAttention(
              (query): AnalogLinear(
                in_features=768, out_features=768, bias=True, TorchInferenceRPUConfig
                (analog_module): TileModuleArray(
                  (array): ModuleList(
                    (0-1): 2 x ModuleList(
                      (0): TorchInferenceTile(
                        (tile): TorchSimulatorTile(768, 384, cpu)
                      )
                    )
                  )
                )
              )
              (key): AnalogLinear(
                in_features=768, out_features=768, bias=True, TorchInferenceRPUConfig
                (analog_module): TileModuleArray(
                  (array): ModuleList(
                    (0-1): 2 x ModuleList(
                      (0): TorchInferenceTile(
                        (tile): TorchSimulatorTile(768, 384, cpu)
                      )
                    )
                  )
                )
              )
              (value): AnalogLinear(
                in_features=768, out_features=768, bias=True, TorchInferenceRPUConfig
                (analog_module): TileModuleArray(
                  (array): ModuleList(
                    (0-1): 2 x ModuleList(
                      (0): TorchInferenceTile(
                        (tile): TorchSimulatorTile(768, 384, cpu)
                      )
                    )
                  )
                )
              )
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): AnalogLinear(
                in_features=768, out_features=768, bias=True, TorchInferenceRPUConfig
                (analog_module): TileModuleArray(
                  (array): ModuleList(
                    (0-1): 2 x ModuleList(
                      (0): TorchInferenceTile(
                        (tile): TorchSimulatorTile(768, 384, cpu)
                      )
                    )
                  )
                )
              )
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): AnalogLinear(
              in_features=768, out_features=3072, bias=True, TorchInferenceRPUConfig
              (analog_module): TileModuleArray(
                (array): ModuleList(
                  (0-1): 2 x ModuleList(
                    (0): TorchInferenceTile(
                      (tile): TorchSimulatorTile(3072, 384, cpu)
                    )
                  )
                )
              )
            )
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): AnalogLinear(
              in_features=3072, out_features=768, bias=True, TorchInferenceRPUConfig
              (analog_module): TileModuleArray(
                (array): ModuleList(
                  (0-5): 6 x ModuleList(
                    (0): TorchInferenceTile(
                      (tile): TorchSimulatorTile(768, 512, cpu)
                    )
                  )
                )
              )
            )
            (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
  )
  (qa_outputs): AnalogLinear(
    in_features=768, out_features=2, bias=True, TorchInferenceRPUConfig
    (analog_module): TileModuleArray(
      (array): ModuleList(
        (0-1): 2 x ModuleList(
          (0): TorchInferenceTile(
            (tile): TorchSimulatorTile(2, 384, cpu)
          )
        )
      )
    )
  )
)
Detected kernel version 3.10.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
You are adding a <class 'transformers.integrations.integration_utils.TensorBoardCallback'> to the callbacks of this Trainer, but there is already one. The currentlist of callbacks is
:DefaultFlowCallback
TensorBoardCallback
Load model from './saved_chkpt_noise_analysis.pth'.
Layer: bert.embeddings.word_embeddings.weight, F1 Score: 4.06, Exact Match: 0.55100%
Layer: bert.embeddings.position_embeddings.weight, F1 Score: 4.19, Exact Match: 0.46
Layer: bert.embeddings.token_type_embeddings.weight, F1 Score: 0.59, Exact Match: 0.08
Layer: bert.embeddings.LayerNorm.weight, F1 Score: 87.11, Exact Match: 79.04
Layer: bert.embeddings.LayerNorm.bias, F1 Score: 86.89, Exact Match: 78.85
Layer: bert.embeddings.word_embeddings.weight, F1 Score: 4.06, Exact Match: 0.55
Layer: bert.embeddings.position_embeddings.weight, F1 Score: 4.19, Exact Match: 0.46
Layer: bert.embeddings.token_type_embeddings.weight, F1 Score: 0.59, Exact Match: 0.08
Layer: bert.embeddings.LayerNorm.weight, F1 Score: 87.11, Exact Match: 79.04
Layer: bert.embeddings.LayerNorm.bias, F1 Score: 86.89, Exact Match: 78.85
Layer: bert.encoder.layer.0.output.dense.analog_module.array.0.0.tile.weight, F1 Score: 86.96, Exact Match: 79.03
Layer: bert.encoder.layer.0.output.dense.analog_module.array.1.0.tile.weight, F1 Score: 86.95, Exact Match: 78.91
Layer: bert.encoder.layer.0.output.dense.analog_module.array.2.0.tile.weight, F1 Score: 87.02, Exact Match: 78.98
Layer: bert.encoder.layer.0.output.dense.analog_module.array.3.0.tile.weight, F1 Score: 87.09, Exact Match: 79.33
Layer: bert.encoder.layer.0.output.dense.analog_module.array.4.0.tile.weight, F1 Score: 86.95, Exact Match: 78.93
Layer: bert.encoder.layer.0.output.dense.analog_module.array.5.0.tile.weight, F1 Score: 86.82, Exact Match: 78.77
Layer: bert.encoder.layer.1.output.dense.analog_module.array.0.0.tile.weight, F1 Score: 87.07, Exact Match: 79.10
Layer: bert.encoder.layer.1.output.dense.analog_module.array.1.0.tile.weight, F1 Score: 87.04, Exact Match: 79.21
Layer: bert.encoder.layer.1.output.dense.analog_module.array.2.0.tile.weight, F1 Score: 87.19, Exact Match: 79.39
Layer: bert.encoder.layer.1.output.dense.analog_module.array.3.0.tile.weight, F1 Score: 87.07, Exact Match: 79.04
Layer: bert.encoder.layer.1.output.dense.analog_module.array.4.0.tile.weight, F1 Score: 86.96, Exact Match: 79.04
Layer: bert.encoder.layer.1.output.dense.analog_module.array.5.0.tile.weight, F1 Score: 87.04, Exact Match: 79.19
Layer: bert.encoder.layer.2.output.dense.analog_module.array.0.0.tile.weight, F1 Score: 86.90, Exact Match: 78.92
Layer: bert.encoder.layer.2.output.dense.analog_module.array.1.0.tile.weight, F1 Score: 86.96, Exact Match: 78.92
Layer: bert.encoder.layer.2.output.dense.analog_module.array.2.0.tile.weight, F1 Score: 84.24, Exact Match: 74.55
Layer: bert.encoder.layer.2.output.dense.analog_module.array.3.0.tile.weight, F1 Score: 81.27, Exact Match: 71.43
Layer: bert.encoder.layer.2.output.dense.analog_module.array.4.0.tile.weight, F1 Score: 86.97, Exact Match: 78.87
Layer: bert.encoder.layer.2.output.dense.analog_module.array.5.0.tile.weight, F1 Score: 86.82, Exact Match: 78.80
Layer: bert.encoder.layer.3.output.dense.analog_module.array.0.0.tile.weight, F1 Score: 87.19, Exact Match: 79.35
Layer: bert.encoder.layer.3.output.dense.analog_module.array.1.0.tile.weight, F1 Score: 84.83, Exact Match: 75.31
Layer: bert.encoder.layer.3.output.dense.analog_module.array.2.0.tile.weight, F1 Score: 87.20, Exact Match: 79.21
Layer: bert.encoder.layer.3.output.dense.analog_module.array.3.0.tile.weight, F1 Score: 76.44, Exact Match: 63.86
Layer: bert.encoder.layer.3.output.dense.analog_module.array.4.0.tile.weight, F1 Score: 85.10, Exact Match: 76.20
Layer: bert.encoder.layer.3.output.dense.analog_module.array.5.0.tile.weight, F1 Score: 82.57, Exact Match: 72.44
Layer: bert.encoder.layer.4.output.dense.analog_module.array.0.0.tile.weight, F1 Score: 87.25, Exact Match: 79.42
Layer: bert.encoder.layer.4.output.dense.analog_module.array.1.0.tile.weight, F1 Score: 85.31, Exact Match: 76.20
Layer: bert.encoder.layer.4.output.dense.analog_module.array.2.0.tile.weight, F1 Score: 87.07, Exact Match: 78.93
Layer: bert.encoder.layer.4.output.dense.analog_module.array.3.0.tile.weight, F1 Score: 87.09, Exact Match: 78.96
Layer: bert.encoder.layer.4.output.dense.analog_module.array.4.0.tile.weight, F1 Score: 87.03, Exact Match: 78.92
Layer: bert.encoder.layer.4.output.dense.analog_module.array.5.0.tile.weight, F1 Score: 86.96, Exact Match: 78.99
Layer: bert.encoder.layer.5.output.dense.analog_module.array.0.0.tile.weight, F1 Score: 87.03, Exact Match: 79.18
Layer: bert.encoder.layer.5.output.dense.analog_module.array.1.0.tile.weight, F1 Score: 87.01, Exact Match: 79.00
Layer: bert.encoder.layer.5.output.dense.analog_module.array.2.0.tile.weight, F1 Score: 86.97, Exact Match: 79.01
Layer: bert.encoder.layer.5.output.dense.analog_module.array.3.0.tile.weight, F1 Score: 87.07, Exact Match: 79.19
Layer: bert.encoder.layer.5.output.dense.analog_module.array.4.0.tile.weight, F1 Score: 86.94, Exact Match: 78.97
Layer: bert.encoder.layer.5.output.dense.analog_module.array.5.0.tile.weight, F1 Score: 86.89, Exact Match: 78.74
Layer: bert.encoder.layer.6.output.dense.analog_module.array.0.0.tile.weight, F1 Score: 87.20, Exact Match: 79.23
Layer: bert.encoder.layer.6.output.dense.analog_module.array.1.0.tile.weight, F1 Score: 87.08, Exact Match: 79.21
Layer: bert.encoder.layer.6.output.dense.analog_module.array.2.0.tile.weight, F1 Score: 86.91, Exact Match: 78.76
Layer: bert.encoder.layer.6.output.dense.analog_module.array.3.0.tile.weight, F1 Score: 87.19, Exact Match: 79.08
Layer: bert.encoder.layer.6.output.dense.analog_module.array.4.0.tile.weight, F1 Score: 86.88, Exact Match: 78.73
Layer: bert.encoder.layer.6.output.dense.analog_module.array.5.0.tile.weight, F1 Score: 87.37, Exact Match: 79.38
Layer: bert.encoder.layer.7.output.dense.analog_module.array.0.0.tile.weight, F1 Score: 87.01, Exact Match: 79.15
Layer: bert.encoder.layer.7.output.dense.analog_module.array.1.0.tile.weight, F1 Score: 87.06, Exact Match: 79.06
Layer: bert.encoder.layer.7.output.dense.analog_module.array.2.0.tile.weight, F1 Score: 86.96, Exact Match: 78.98
Layer: bert.encoder.layer.7.output.dense.analog_module.array.3.0.tile.weight, F1 Score: 87.03, Exact Match: 78.97
Layer: bert.encoder.layer.7.output.dense.analog_module.array.4.0.tile.weight, F1 Score: 86.82, Exact Match: 78.73
Layer: bert.encoder.layer.7.output.dense.analog_module.array.5.0.tile.weight, F1 Score: 87.32, Exact Match: 79.58
Layer: bert.encoder.layer.8.output.dense.analog_module.array.0.0.tile.weight, F1 Score: 87.03, Exact Match: 79.22
Layer: bert.encoder.layer.8.output.dense.analog_module.array.1.0.tile.weight, F1 Score: 87.17, Exact Match: 79.30
Layer: bert.encoder.layer.8.output.dense.analog_module.array.2.0.tile.weight, F1 Score: 87.22, Exact Match: 79.23
Layer: bert.encoder.layer.8.output.dense.analog_module.array.3.0.tile.weight, F1 Score: 87.16, Exact Match: 79.24
Layer: bert.encoder.layer.8.output.dense.analog_module.array.4.0.tile.weight, F1 Score: 86.96, Exact Match: 78.91
Layer: bert.encoder.layer.8.output.dense.analog_module.array.5.0.tile.weight, F1 Score: 87.19, Exact Match: 79.41
Layer: bert.encoder.layer.9.output.dense.analog_module.array.0.0.tile.weight, F1 Score: 86.87, Exact Match: 78.81
Layer: bert.encoder.layer.9.output.dense.analog_module.array.1.0.tile.weight, F1 Score: 87.02, Exact Match: 79.16
Layer: bert.encoder.layer.9.output.dense.analog_module.array.2.0.tile.weight, F1 Score: 87.06, Exact Match: 79.16
Layer: bert.encoder.layer.9.output.dense.analog_module.array.3.0.tile.weight, F1 Score: 87.12, Exact Match: 79.04
Layer: bert.encoder.layer.9.output.dense.analog_module.array.4.0.tile.weight, F1 Score: 86.88, Exact Match: 78.94
Layer: bert.encoder.layer.9.output.dense.analog_module.array.5.0.tile.weight, F1 Score: 86.91, Exact Match: 78.84
Layer: bert.encoder.layer.10.output.dense.analog_module.array.0.0.tile.weight, F1 Score: 87.16, Exact Match: 79.32
Layer: bert.encoder.layer.10.output.dense.analog_module.array.1.0.tile.weight, F1 Score: 87.09, Exact Match: 79.33
Layer: bert.encoder.layer.10.output.dense.analog_module.array.2.0.tile.weight, F1 Score: 87.00, Exact Match: 78.81
Layer: bert.encoder.layer.10.output.dense.analog_module.array.3.0.tile.weight, F1 Score: 86.99, Exact Match: 78.84
Layer: bert.encoder.layer.10.output.dense.analog_module.array.4.0.tile.weight, F1 Score: 86.94, Exact Match: 78.98
Layer: bert.encoder.layer.10.output.dense.analog_module.array.5.0.tile.weight, F1 Score: 87.18, Exact Match: 79.41
Layer: bert.encoder.layer.11.output.dense.analog_module.array.0.0.tile.weight, F1 Score: 87.16, Exact Match: 79.26
Layer: bert.encoder.layer.11.output.dense.analog_module.array.1.0.tile.weight, F1 Score: 87.04, Exact Match: 79.01
Layer: bert.encoder.layer.11.output.dense.analog_module.array.2.0.tile.weight, F1 Score: 87.23, Exact Match: 79.22
Layer: bert.encoder.layer.11.output.dense.analog_module.array.3.0.tile.weight, F1 Score: 87.10, Exact Match: 79.25
Layer: bert.encoder.layer.11.output.dense.analog_module.array.4.0.tile.weight, F1 Score: 87.13, Exact Match: 79.01
Layer: bert.encoder.layer.11.output.dense.analog_module.array.5.0.tile.weight, F1 Score: 87.07, Exact Match: 79.31
Layer: qa_outputs.analog_module.array.0.0.tile.weight, F1 Score: 87.10, Exact Match: 78.98
Layer: qa_outputs.analog_module.array.1.0.tile.weight, F1 Score: 87.07, Exact Match: 79.13
